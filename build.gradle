plugins {
	id 'fabric-loom' version '1.8-SNAPSHOT'
	id 'maven-publish'
	
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	maven {
		url "https://maven.shedaniel.me"
	}

	maven {
		url "https://maven.terraformersmc.com/"
	}

	maven {
		url "https://squiddev.cc/maven/"
		content {
			includeGroup("cc.tweaked")
		}
	}

	flatDir {
		dir 'libs'
	}
}

loom {
	accessWidenerPath = file("src/main/resources/energizedpower.accesswidener")
}

fabricApi {
	configureDataGeneration {
		getOutputDirectory().set(getProject().file("src/generated/resources"))

		setModId(project.modid)
	}

	loom.runConfigs.datagen.runDir("run")
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
	// Uncomment the following line to enable the deprecated Fabric API modules. 
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"

	// Team Reborn: Fabric energy
	include modApi('teamreborn:energy:4.1.0') {
		exclude(group: "net.fabricmc.fabric-api")
	}

	// REI integration
	modCompileOnlyApi "me.shedaniel.cloth:basic-math:0.6.1"
	modCompileOnlyApi "dev.architectury:architectury-fabric:14.0.4"
	modCompileOnlyApi "me.shedaniel:RoughlyEnoughItems-api-fabric:17.0.794"
	modCompileOnlyApi "me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:17.0.794"

	// EMI integration
	modCompileOnly "dev.emi:emi-fabric:1.1.8+1.21:api"

	// CCTweaked integration
	modCompileOnlyApi "cc.tweaked:cc-tweaked-1.21-core-api:1.111.0"
	modCompileOnlyApi "cc.tweaked:cc-tweaked-1.21-fabric-api:1.111.0"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

//Dummy task to fix post sync error caused by NeoGradle
tasks.register("idePostSync") {

}
